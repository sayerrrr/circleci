defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:14
version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-

      - checkout

      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply -var-file variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  install:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "NPM install"
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Build app"
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy:
    <<: *defaults
    environment:
      - STAGING_BUCKET: "test.resourcenetwork.co"
      - PRODUCTION_BUCKET: "test.resourcenetwork.co"
      - STAGING_DISTRIBUTION_ID: "E25FPA2C681YIW"
      - PRODUCTION_DISTRIBUTION_ID: "E25FPA2C681YIW"
    steps:
      - attach_workspace:
          at: .
      - run: sudo apt-get update && sudo apt-get install -y python-dev
      - run: sudo curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py
      - run: sudo python get-pip.py
      - run: sudo pip install awscli --upgrade
      - run: aws --version
      - run:
          name: "Deploy to S3"
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then 
              aws s3 sync ./build s3://${PRODUCTION_BUCKET} --delete
              aws cloudfront create-invalidation --distribution-id "${PRODUCTION_DISTRIBUTION_ID}" --paths /index.html
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              aws s3 sync ./build s3://${STAGING_BUCKET} --delete
              aws cloudfront create-invalidation --distribution-id "${STAGING_DISTREBUTION_ID}" --paths /index.html
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      - build:
          requires:
            - install
      - deploy:
          requires:
            - build
